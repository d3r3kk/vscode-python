resources:
- repo: self
  clean: true
queue:
  name: Hosted VS2017
  demands: npm


#Your build definition references the ‘Python.VersionSpec’ variable, which you’ve selected to be settable at queue time. Create or edit the build definition for this YAML file, define the variable on the Variables tab, and then select the option to make it settable at queue time. See https://go.microsoft.com/fwlink/?linkid=865971
#Your build definition references the ‘Node.VersionSpec’ variable, which you’ve selected to be settable at queue time. Create or edit the build definition for this YAML file, define the variable on the Variables tab, and then select the option to make it settable at queue time. See https://go.microsoft.com/fwlink/?linkid=865971
steps:
- task: UsePythonVersion@0
  displayName: Use Python
  inputs:
    versionSpec: '$(Python.VersionSpec)'

- task: NodeTool@0
  displayName: Use Node
  inputs:
    versionSpec: '$(Node.VersionSpec)'

- task: Npm@1
  displayName: Use Yarn
  inputs:
    command: custom
    verbose: false
    customCommand: 'install --global yarn'

- task: CmdLine@1
  displayName: Yarn add vsce
  inputs:
    filename: yarn
    arguments: '-D add vsce'

- task: CmdLine@1
  displayName: pip install requirements
  inputs:
    filename: python
    arguments: '-m pip install --upgrade -r ./requirements.txt'

- powershell: |
   $ptvsdChildPath = 'pythonFiles/experimental/ptvsd'
   
   $ptvsdLocalPath = Join-Path -Path $(Build.SourcesDirectory) -ChildPath $ptvsdChildPath
   
   $ptvsdGitUri = 'git+https://github.com/Microsoft/ptvsd/'
   
   Write-Verbose "[path] ptvsdChildPath = '$ptvsdChildPath'"
   Write-Verbose "[path] ptvsdLocalPath = '$ptvsdLocalPath'"
   Write-Verbose "[path] ptvsdGitUri = '$ptvsdGitUri'"
   
   Write-Verbose "[python-task] python -m pip install -t $ptvsdChildPath $ptvsdGitUri"
   & python -m pip install -t $ptvsdChildPath $ptvsdGitUri 
  displayName: Python Setup: pip install ptvsd
  condition: eq(variables['Build.OSType'], 'Windows')

- task: CmdLine@1
  displayName: yarn install
  inputs:
    filename: yarn
    arguments: '--frozen-lockfile'

- task: CmdLine@1
  displayName: vsce package
  inputs:
    filename: yarn
    arguments: 'run vsce package'

- task: CopyFiles@2
  displayName: Copy Files to Artifact Staging
  inputs:
    SourceFolder: '$(Build.SourcesDirectory)'
    Contents: '**/python-*.vsix'
    TargetFolder: '$(Build.ArtifactStagingDirectory)/vsix'

- task: PublishBuildArtifacts@1
  displayName: Publish VSIX
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)/vsix'
    ArtifactName: vsix
    publishLocation: Container
